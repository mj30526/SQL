/*Added chinook database to SQLite and answered the following questions*/

/*Show Customers (their full names, customer ID, and country) who are not in the US*/
SELECT FirstName, LastName, CustomerId, Country FROM chinook.customers WHERE Country <> "USA";

/*Show only the Customers from Brazil*/
SELECT * FROM chinook.customers WHERE Country = "Brazil";

/*Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country*/
SELECT cust.FirstName, cust.LastName, inv.InvoiceId, inv.BillingCountry, inv.InvoiceDate FROM chinook.invoices as inv LEFT JOIN chinook.customers as cust on inv.CustomerId = cust.CustomerId WHERE inv.BillingCountry = "Brazil";

/*Show the Employees who are Sales Agents*/
SELECT * FROM chinook.Employees WHERE Title = "Sales Support Agent";

/*Find a unique/distinct list of billing countries from the Invoice table*/
SELECT DISTINCT BillingCountry FROM chinook.Invoices;

/*Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name*/
SELECT employees.FirstName, employees.LastName, invoices.InvoiceId FROM invoices LEFT JOIN customers ON invoices.CustomerId=customers.CustomerId JOIN employees ON customers.SupportRepId=employees.EmployeeId;

/*Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers*/
SELECT invoices.Total, customers.FirstName as C_First, customers.LastName as C_Last, customers.Country, employees.FirstName as E_First, employees.LastName as E_Last FROM invoices JOIN customers ON invoices.CustomerId=customers.CustomerId JOIN employees ON customers.SupportRepId=employees.EmployeeId;

/*How many Invoices were there in 2009*/
SELECT COUNT(*)FROM chinook.Invoices WHERE InvoiceDate BETWEEN'2009-01-01' AND '2009-12-31';

/*What are the total sales for 2009*/
SELECT SUM(Total) FROM invoices WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

/*Write a query that includes the purchased track name with each invoice line ID*/
SELECT tracks.Name, invoice_items.InvoiceLineID FROM tracks JOIN invoice_items ON tracks.TrackId=invoice_items.TrackId;

/*Write a query that includes the purchased track name AND artist name with each invoice line ID*/
SELECT t.Name, ar.Name as A_Name, i.InvoiceLineID FROM invoice_items i LEFT JOIN tracks t ON i.TrackId=t.TrackId INNER JOIN albums a ON a.AlbumId=t.AlbumId LEFT JOIN artists ar ON a.ArtistId=ar.ArtistId;

/*Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre*/
SELECT t.Name as Track_Name, a.Title as Album_Title, m.Name as Media_Type, g.Name as Genre FROM tracks t JOIN albums a ON t.Albumid=a.Albumid JOIN media_types m ON m.MediaTypeid=t.MediaTypeid JOIN genres g ON g.Genreid=t.Genreid;

/*Show the total sales made by each sales agent*/
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as 'Total Sales' FROM employees e JOIN customers c ON c.SupportRepId = e.EmployeeId JOIN invoices i ON i.CustomerId = c.CustomerId WHERE e.Title = 'Sales Support Agent' GROUP BY e.FirstName;

/*Which sales agent made the most dollars in sales in 2009?*/
SELECT e.FirstName, e.LastName, ROUND(SUM(i.Total), 2) as 'Total Sales' FROM employees e JOIN customers c ON c.SupportRepId = e.EmployeeId JOIN invoices i ON i.CustomerId = c.CustomerId WHERE e.Title = 'Sales Support Agent' AND i.InvoiceDate Between '2009-01-01' AND '2009-12-31' GROUP BY e.FirstName ORDER BY (round(sum(i.Total), 2))  DESC LIMIT 1;
